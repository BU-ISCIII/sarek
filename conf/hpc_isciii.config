//singularity {
//  enabled = true
//  }

process {

  // TODO nf-core: Check the defaults for all processes
  executor = 'sge'
  queue = 'all.q@obelix09,all.q@obelix10,all.q@obelix11,all.q@obelix12,all.q@obelix13,all.q@obelix14'
  conda = '/processing_Data/bioinformatics/pipelines/miniconda3/envs/nf-core-sarek-2.6-fix-gatk'
  //container = 'nfcore/sarek:2.6'
  //container = '/processing_Data/bioinformatics/research/test_SRVIIER207_20200207_TRIO143_bmartinezd_S/ANALYSIS/sarek/nfcore-sarek-2.6.img'
  penv='openmp'

  cpus = {check_resource(params.cpus * task.attempt)}
  memory = {check_resource((params.single_cpu_mem as nextflow.util.MemoryUnit) * task.attempt)}
  time = {check_resource(240.h * task.attempt)}
  shell = ['/bin/bash', '-euo', 'pipefail']

  errorStrategy = {task.exitStatus in [143,137,104,134,139] ? 'retry' : 'finish'}
  maxErrors = '-1'
  maxRetries = 3

  withLabel:cpus_1 {
    cpus = {check_resource(1)}
  }
  withLabel:cpus_2 {
    cpus = {check_resource(2)}
  }
  withLabel:cpus_4 {
    cpus = {check_resource(4)}
  }
  withLabel:cpus_8 {
    cpus = {check_resource(8)}
  }
  withLabel:cpus_16 {
    cpus = {check_resource(16)}
  }
  withLabel:cpus_max {
    cpus = {params.max_cpus}
  }

  withLabel:memory_singleCPU_2_task {
    memory = {check_resource((params.single_cpu_mem as nextflow.util.MemoryUnit) * 2 * task.attempt)}
  }
  withLabel:memory_singleCPU_task_sq {
    memory = {check_resource((params.single_cpu_mem as nextflow.util.MemoryUnit) * task.attempt * task.attempt)}
  }
  withLabel:memory_max {
    memory = {params.max_memory}
  }

  withName:Get_software_versions {
    cache = false
  }

  withName:ConcatVCF {
    // For unknown reasons, ConcatVCF sometimes fails with SIGPIPE
    // (exit code 141). Rerunning the process will usually work.
    errorStrategy = {task.exitStatus == 141 ? 'retry' : 'terminate'}
  }
  withLabel:FastQC {
    errorStrategy = {task.exitStatus == 143 ? 'retry' : 'ignore'}
  }
  withName:MapReads {
    // memory = {check_resource(60.GB * task.attempt)}
    memory = {check_resource(12.GB)}
    time = {check_resource(240.h * task.attempt)}
  }
  withName:MultiQC {
    errorStrategy = {task.exitStatus == 143 ? 'retry' : 'ignore'}
  }
  withName:Snpeff {
    container = {(params.annotation_cache && params.snpeff_cache) ? 'nfcore/sarek:2.6' : "nfcore/sareksnpeff:2.6.${params.genome}"}
    errorStrategy = {task.exitStatus == 143 ? 'retry' : 'ignore'}
  }
  withLabel:VEP {
    container = {(params.annotation_cache && params.vep_cache) ? 'nfcore/sarek:2.6' : "nfcore/sarekvep:2.6.${params.genome}"}
    errorStrategy = {task.exitStatus == 143 ? 'retry' : 'ignore'}
  }
}

params {
  config_profile_name = 'Full ISCIII HPC profile'
  config_profile_description = 'Full HPC ISCIII configuration'

  max_cpus = 20
  //max_memory = 240.GB
  max_memory = 10.GB
  max_time = 240.h
  single_cpu_mem = 7.GB
}

env {
     _JAVA_OPTIONS = '-XX:ConcGCThreads=1'
     //JAVA_OPTS = "-Xms512M"
}

